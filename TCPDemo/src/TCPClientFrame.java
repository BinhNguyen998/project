
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mac
 */
public class TCPClientFrame extends javax.swing.JFrame {

    private TCPBase tcp;
    private int currentRound;
    private int wins;
    private int rounds;
    /**
     * Creates new form TCPClientFrame
     */
    public TCPClientFrame() {
        initComponents();
        
        tcp = new TCPBase();
        
        currentRound = 0;
        wins = 0;
        rounds = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPort = new javax.swing.JTextField();
        btnConnect = new javax.swing.JButton();
        lblTotalRound = new javax.swing.JLabel();
        lblRound = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbChoose = new javax.swing.JComboBox();
        btnSend = new javax.swing.JButton();
        btnRestart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 48)); // NOI18N
        jLabel1.setText("Rock/Scisors/Paper Game");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel2.setText("Server address:");

        txtAddress.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtAddress.setText("127.0.0.1");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel3.setText("port");

        txtPort.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtPort.setText("11919");

        btnConnect.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        btnConnect.setText("Connect");
        btnConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConnectActionPerformed(evt);
            }
        });

        lblTotalRound.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblTotalRound.setText("Total rounds:");

        lblRound.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblRound.setText("Round:");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel6.setText("Choose:");

        cbChoose.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        cbChoose.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Rock", "Scisors", "Paper" }));
        cbChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbChooseActionPerformed(evt);
            }
        });

        btnSend.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        btnRestart.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        btnRestart.setText("Restart");
        btnRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(121, 121, 121)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblTotalRound)
                        .addGap(85, 85, 85)
                        .addComponent(lblRound))
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAddress)
                            .addComponent(cbChoose, 0, 206, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRestart, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConnect, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalRound)
                    .addComponent(lblRound))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbChoose, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSend, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRestart, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(141, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConnectActionPerformed
        String ip = txtAddress.getText();
        int port = Integer.parseInt(txtPort.getText());
        
        try {
            tcp.connect(ip, port);
            tcp.setupStreams();
            tcp.sendMessage("How many rounds?");
            
            rounds = tcp.receiveInt();
            
            lblTotalRound.setText(lblTotalRound.getText() + rounds);
        } catch (IOException ex) {
            showError(ex.getMessage());
        }
    }//GEN-LAST:event_btnConnectActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        try {
            String choice = cbChoose.getSelectedItem().toString();
            switch (choice) {
                case "Rock":
                    choice = "R";
                    tcp.sendMessage("R"); break;
                case "Scisors":
                    choice = "S";
                    tcp.sendMessage("S"); break;
                case "Paper":
                    choice = "P";
                    tcp.sendMessage("P"); break;
            }
            String serverChoice = tcp.receiveMessage();
            
            String status = compare(choice, serverChoice);
            
            updateGame(status, serverChoice);
            
        } catch (IOException ex) {
            showError(ex.getMessage());
        }
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestartActionPerformed
        try {
            tcp.closeConnection();
            wins = 0;
            rounds = 0;
            currentRound = 0;
        } catch (IOException ex) {
            showError(ex.getMessage());
        }
        
    }//GEN-LAST:event_btnRestartActionPerformed

    private void cbChooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbChooseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbChooseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TCPClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TCPClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TCPClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TCPClientFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TCPClientFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConnect;
    private javax.swing.JButton btnRestart;
    private javax.swing.JButton btnSend;
    private javax.swing.JComboBox cbChoose;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblRound;
    private javax.swing.JLabel lblTotalRound;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtPort;
    // End of variables declaration//GEN-END:variables

    private void showError(String message) {
        JOptionPane.showMessageDialog(rootPane,  message, "Error",
                                    JOptionPane.ERROR_MESSAGE);
    }
    private void showInfo(String message) {
        JOptionPane.showMessageDialog(rootPane,  message, "Info",
                                    JOptionPane.INFORMATION_MESSAGE);
    }

    private String compare(String choice, String serverChoice) {
        if (! choice.equals(serverChoice)) {
            if ( (choice.equals("R") && serverChoice.equals("S")) ||
                 (choice.equals("S") && serverChoice.equals("P")) ||
                 (choice.equals("P") && serverChoice.equals("R")) ) 
            {
                wins++;
                return "You win!";
            }
            else {
                wins--;
                return "You loose!";
            }
        }
        else {
            return "You draw!";
        }
    }

    private void updateGame(String status, String serverChoice) {
        currentRound++;
        lblRound.setText("Round: " + currentRound + ". Server: " 
                              + serverChoice + " " + status);
        
        if (currentRound == rounds) {
            if (wins > 0) {
                showInfo("Game over! You win!");
            } else if (wins < 0) {
                showInfo("Game over! You loose!");
            } else 
                showInfo("Game over! You draw!");
        }
    }
}
